do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,u)local u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=103,36,78,25,57,97,69,60,32,23,77,33,43,37,17,72,45,14,88,29,85,81,52,20,96,98,20,67,24,14,66,17,47,79,80,52,45,92,38,89,73,14,82,26,25,64,80,21,53,55,96,10 while u~=71 do if v<=661 then if v<=325 then if v>=191 then if v>=272 then if v<=272 then bs=math.ldexp v=287 else if v<322 then v=325 bo=(getfenv or function()return _ENV end)else ca=setmetatable v=356 end end else if v>=234 then if v>236 then do ce=table.insert end v=272 else v=252 bd=table.concat end else v=234 bq=string.rep end end else if v>=92 then if v>=130 then if v<166 then v=175 bi=string.sub else do bf=string.gsub end v=191 end else br=string.char v=130 end else if v<49 then v=55 w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=nil else v=92 bn=string.byte end end end else if v<=481 then if v>=431 then if v<=431 then v=446 bv=(function(u,bd)if not(cb(u)~='number')then do return true end else return false end end)else if v>452 then bm=math.floor v=498 else v=481 be=math.abs end end else if v<377 then v=382 do bw=select end else v=431 cb=type end end else if v>=588 then if v<=588 then for u=0,255 do do cd[u]=br(u);end end v=625 else if v<654 then v=661 bk=bffunction(u,bd,bd,bd,bd)return cd[ba(u,16)]end)else v=687 bg={{0,1,d,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,m,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,q,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,g,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,a,},{9,8,11,10,13,12,15,14,1,0,t,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,n,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,i,0,},nil,nil,nil}end end else if v>=517 then if v<536 then ba=tonumber v=542 else cd={}v=588 end else bp=(unpack or table.unpack)v=517 end end end end else if v<=960 then if v>=824 then if v<=892 then if v<=824 then v=853 x=function(a,d,g,i,i)local i,m,n=52,62,73,81,77,11,42,68,62,17,78,63,62,93 while i~=37 do if m<=122 then if m>=88 then if m<116 then m=122 n=nil else n=((d/bb[a])%bb[g])m=145 end else n=nil m=88 end else if m>=189 then if m<213 then m=215 return n else i=37;end else n=(n-n%1)m=189 end end end end else if v<889 then v=892 bj=(bit_lib and bit_lib.bxor or function(a,d)a=a%(2^32)d=d%(2^32)local g,i=0,1 while a>0 and d>0 do local m,n=a%16,d%16 g=g+bg[m+1][n+1]*i a=(a-m)/16 d=(d-n)/16 i=i*16 end g=g+a*i+d*i return g end)else v=908 cg=function(a,d,g,i)local i do i=((a/2^(d-1))%2^((g-1)-(d-1)+1))end return(i-i%1);end end end else if v<=908 then v=931 cc=1 else if v>935 then v=996 y=function()local a a=bn(bk,cc,cc)cc=(cc+1);return a;end else v=960 bu=function()local a,d,g,i g,a,i,d=bn(bk,cc,(cc+3))cc=(cc+4);do return((d*c)+(i*65536)+(a*256)+g);end end end end end else if v>=743 then if v>=785 then if v<801 then ci=2 v=806 else v=824 for a=1,31 do bb[a]=ci ci=(ci*2)end end else v=785 bb={[0]=1}end else if v>694 then bh=(2^52)v=743 else bx=''v=705 end end end else if v>=1152 then if v<=1233 then if v<=1152 then v=1184 do w=function(a,c,c)local c,d,g,i,m,n,q,t=59,58,57,62,55,65,38,62,90,32,90,38,92,96,57,54,68,86,92,90,96,71,88 while c~=39 do if d>=302 then if d<=404 then if d<=323 then if d<319 then d=323 n[113]=g;else d=364 for c=1,bu()do local u,ba,bb,bd,be,bf=62,51,32,70,77,34,63,60,65,74,94,63,23,12,47,69,19,18,34,35,85,60,93,40,83 while u~=39 do if ba<=257 then if ba<=122 then if ba<=81 then if ba>57 then bf={{},nil,nil,nil}ba=97 else bb,bd,be,bf=nil ba=81 end else if ba<115 then bf[154]=y();ba=122 else ba=144 bf[193]={};end end else if ba>=210 then if ba<=210 then do bb=bu()end ba=226 else if ba<251 then be=cg(bd,1,2)ba=257 else bf[35]=be ba=303 end end else if ba>151 then bd=bu()ba=210 else ba=188 if not(y()~=1)then do for be=1,y()do bf[193][be]={y()==0,bu()}end end end end end end else if ba>=433 then if ba>=480 then if ba<=480 then ba=496 do bf[46]=-bf[123]end else if ba<528 then ba=533 m[c]=bf;else u=39;end end else if ba<446 then bf[143]=cg(bd,12,20);ba=451 else bf[68]=-bf[96]ba=480 end end else if ba<=325 then if ba>311 then bf[96]=cg(bd,3,11);ba=367 else bf[71]=cg(bb,1,11);ba=325 end else if ba>371 then bf[123]=cg(bd,21,29);ba=433 else ba=386 do bf[95]=cg(bb,12,33);end end end end end end end end else if d<396 then d=404 do n[105]=m;end else d=428 q=bu()end end else if d>=502 then if d<=502 then d=541 n[134]=t else if d>549 then break else d=579 do return n;end end end else if d<464 then t={}d=470 else d=502 for c=1,q do local u,ba,bb,bd=58,47,87,85,83,71,40,97,32,25,59,39,86,97,28,59 while u~=35 do if ba<=114 then if ba>=81 then if ba<105 then ba=114 bb=y()else bd=nil ba=163 end else ba=81 bb,bd=nil end else if ba>=203 then if ba<233 then ba=242 t[c]=bd;else break end else if(not(bb~=3))then bd=(not(y()==0));elseif(2==bb)then do bd=bl();end elseif(not(bb~=0))then bd=ch();elseif(1==bb)then do bd=a[ch()];end end;ba=203 end end end end end end end else if d<=136 then if d>=115 then if d>117 then n={}d=167 else g={}d=136 end else if d>63 then m={}d=115 else d=83 g,i,m,n,q,t=nil end end else if d<=213 then if d>169 then for a=(#cf+1),(#cf+i)do local c,m,q,t,u=87,59,50,27,23,93,97,38,25,63,38,45,98,13,80,56,56,71,71,29,93,51 while c~=51 do if m<=252 then if m<=148 then if m<=94 then if m>64 then m=126 do u={}end else m=94 q,t,u=nil end else if m<146 then do u[154]=y();end m=148 else m=184 do t=bu()end end end else if m<=220 then if m>188 then m=235 do u[143]=y();end else m=220 do q=bu()end end else if m>242 then m=268 do u[71]=cg(q,1,11);end else u[35]=cg(t,1,2);m=252 end end end else if m>=369 then if m<=386 then if m>372 then u[b]=-u[123]m=414 else u[68]=-u[96]m=386 end else if m>418 then break else m=444 cf[a]=u;end end else if m<=286 then if m<282 then do u[96]=cg(t,3,11);end m=286 else u[191]=cg(t,f,20);m=313 end else if m<331 then u[123]=cg(t,21,29);m=337 else u[95]=cg(q,12,33);m=369 end end end end end end d=236 else d=213 do i=bu()end end else if d<254 then n[99]=y();d=263 else for a=1,bu()do do g[a-1]=w();end end d=302 end end end end end end end else if v<1227 then v=1233 z={}else v=1268 bz={}end end else if v>=1315 then if v<1342 then v=1346 return bc(w(bo()),{},bo())();else break end else v=1315 bc=function(a,b,c,d,d)local d,f,g,i,m do i=a[113]end do d=z end m=a[105]g=a[99]do f=a[j]end return function(...)local a,d,j,n,q,t,u,w,y w=1 do n=-1 end q=-1 y={}do u={...}end do d=(bw('#',...)-1)end t={}a={}do for q=0,d do if(not(q<g))then do y[(q-g)]=u[(q+1)];end else a[q]=u[(q+1)];end;end;end j=(d-g+1)while true do local j,q,ba,bb,bd,be,bf,bg,bi,bj bj=m[w]bd=bj[71]bf=bj[p]do ba=bj[96]end do be=bj[191]end bg=bj[123]q=bj[143]bi=bj[68]bb=bj[95]j=bj[46]if not(bj[71]>44)then if not(bd>21)then if not(bj[71]<11)then do if not(bd<16)then do if not(bd<19)then if not(bd>19)then if a[ba]then w=bb;end;else if(bd<21)then a[ba]=z[be]elseif not a[bg]then a[bj[96]]=a[bg];w=bb;end end else if not(bd<17)then do if(bd<18)then a[bj[96]]=bc(i[bj[95]],nil,c);else local p,bf p=ba bf=a[bb]a[(p+1)]=bf;a[p]=bf[f[bg]];end end else if(not(a[ba]==f[bg]))then w=bb;end;end end end else if not(bd<13)then if not(bd>13)then do do return a[bj[96]]end end else do if(bd>14)then a[j]=(function()a[ba]=bc(i[be],nil,c);end)else local p,bf bf,p=bt(...)for p=1,ba do do a[(p-1)]=bf[p]end end end end end else if not(bd~=11)then w=((f[ba]~=f[bg])and bb or w)else do m[w]={[143]=0,[123]=3,[71]=bd- -47,[96]=3,[95]=0};end w=(w-1);end end end end else do if not(bd<5)then if not(bd>7)then if not(bd<6)then if(bd>6)then a[ba]=-a[bb];else local p,bf,bm,bo do bf=ba end bo={a[bf]()}do p=bg end do bm=0 end do for bq=bf,p do do bm=(bm+1);end a[bq]=bo[bm];end end end else local p,bf p=ba do bf={}end if(#t>0)then for bm=1,#t do local bo bo=t[bm]do for bm=0,#bo do local bq,br,bs br=bo[bm]bs=br[1]bq=br[2]if(bs==a and bq>=0)then do bf[bq]=bs[bq]end br[1]=bf end end end end end do return bp(a,p,n);end end else if not(bd<9)then if(bd>9)then a[ba]=(a[bb]%a[bg]);else a[j]();end else do f=z[ba](f)end end end else if not(bd>1)then if(bd>0)then do if(not(a[ba]<a[bg]))then w=bb;end;end else local j,p p=bb j=a[p]for bf=(p+1),bg do j=(j..a[bf]);end;do a[bj[96]]=j;end end else if not(bd>2)then a[ba]=(a[bb]/f[bg]);else if(bd<4)then a[ba]=a[bj[95]]else a[ba]=(a[bj[95]]%f[bg]);end end end end end end else do if not(bd<33)then if not(bd<39)then if not(bd>41)then if not(bj[71]<40)then if l==bd then local j j=bj[96]a[j]=a[j](bp(a,j+1,n));else a[ba]=c[f[bb]];end else if((a[ba]<a[bg]))then w=bb;end;end else do if not(bd>42)then local j j=bj[96]do return bp(a,j,(j+bb))end;else if(bd<44)then do a[ba]=b[bj[95]];end else local j,l l=ba j=a[bj[95]]a[(l+1)]=j;a[l]=j[a[bj[123]]];end end end end else do if not(bd>35)then if not(bd<34)then if 34==bd then a[bj[96]]=a[bj[95]][f[bg]];else a[ba]=(a[bj[k]]+a[bj[123]]);end else a[ba]={};end else if not(bd>36)then local j,k do k=ba end do j=bj[95]end for l=k,j do a[l]=y[(l-k)];end;else if 37==bd then a[ba]=a[bj[95]][a[bg]];else do a[bj[96]]=(a[bb]-a[bg]);end end end end end end else if not(bd<27)then if not(bd<30)then do if not(bd<31)then if(bd>31)then a[ba]();else do m[w]={[71]=bd- -3,[95]=3,[123]=o,[143]=0,[96]=3};end w=(w-1);end else z[ba]=z[be]end end else do if not(bd<28)then if(bd>28)then a[ba]=#a[bb];else end else local j j=ba do return a[j](bp(a,(j+1),bb))end;end end end else do if not(bd>23)then if(bj[71]>22)then z[ba]=a[be]else end else do if not(bd<25)then if(bd>e)then local e e=ba a[e]=a[e](a[e+1]);else local e e=a[bi][q]do a[bi][q]=(e..a[bg]);end end else do a[ba][f[bb]]=f[bg];end end end end end end end end end else if not(bj[71]>67)then do if not(bd>55)then if not(bd>49)then if not(bd>46)then if(bd<46)then m[w]=cf[q];w=bb;else w=((a[ba]<a[bg])and bb or w)end else if not(bj[71]<48)then do if(bd<49)then do while((f[ba]<a[bg]))do w=bb;break end end else a[bj[s]][a[bb]]=a[bg];end end else if(a[bg]~=a[ba])then w=bb;end;end end else if not(bd<53)then do if not(bd<54)then do if 54==bd then a[ba]=(a[bb]/a[bg]);else do do return a[bj[68]][q]end end end end else local e,j,k j=ba e=a[(j+2)]k=(a[j]+e)a[j]=k;do if((e>0))then while(k<=a[j+1])do w=bb;a[j+3]=k;break end elseif(not(k<a[j+1]))then w=bb;a[(j+3)]=k;end end end end else if not(bd<51)then if(bj[71]<52)then local e e={}while#t>0 do for j=1,#t do local j=t[j]for k=0,#j do local j=j[k]local k=j[1]local l=j[2]if k==a and l>=0 then e[l]=k[l]j[1]=e end end end break end do return a[ba],bj[bj[191]],bj[ba];end else do a[bj[ba]]=a end end else a[bj[46]]=(function()a[ba]=bc(i[be],nil,c);end)end end end else if not(bd>61)then if not(bd<59)then if not(bd<60)then if(bd<61)then local e,i,j e=ba i={a[e](a[e+1])}j=0 for k=e,bg do j=(j+1);a[k]=i[j];end else do a[ba]=c[f[bj[95]]][f[bg]];end end else a[ba]=a[bj[95]];end else if not(bj[71]<57)then do if(bd<58)then b[bb]=a[ba];else w=((f[ba]<a[bj[123]])and bb or w)end end else local b,e,i,j e=ba b=((bj[123]-h)*50)j=a[e]do i=bb end for h=1,i do do j[(b+h)]=a[(e+h)]end end;end end else do if not(bj[71]>64)then if not(bd<63)then if(bd<64)then for b=ba,bb do a[b]=nil;end;else local b,e,h b=ba e={a[b](bp(a,b+1,bb))}do h=0 end for i=b,bg do h=(h+1);a[i]=e[h];end end else if ba then ba=false;do bg=bb;end do w=(w-1);end else do w=(w+bj[95]+bg);end end end else do if not(bd>65)then local b,e,h,i,j e=ba j=bg b=(e+2)i={a[e](a[e+1],a[b])}for k=1,j do do a[(b+k)]=i[k]end end h=a[(e+3)]if h then a[b]=h else w=bb;end;else if 66==bd then w=bj[95];else a[bj[96]]=(not a[bb]);end end end end end end end end else if not(bd<79)then if not(bd>84)then do if not(bd<82)then if not(bd<83)then if(bj[71]>83)then do a[ba]=(a[bj[95]]+f[bj[123]]);end else a[ba]=nil;end else if((a[ba]>a[bg]))then w=bj[95];end;end else if not(bd<80)then if 80==bd then local b b=ba a[b]=a[b](bp(a,b+1,bb));else local b,e,h,i do e=ba end h,i=bt(a[e](bp(a,(e+1),bb)))n=(i+e-1)b=0 for i=e,n do b=(b+1);a[i]=h[b];end;end else c[f[bb]]=a[ba];end end end else do if not(bd<88)then if not(bd>88)then z[ba]={}else if(bd<90)then a={};do for b=0,d do if(b<g)then do a[b]=u[(b+1)];end else break end;end;end else do c=a[bj[ba]]end end end else if not(bd<86)then do if(bd>86)then local b,c b=ba c={}for d=1,#t do local e do e=t[d]end for d=0,#e do local g,h,i do h=e[d]end g=h[1]i=h[2]if(g==a and i>=b)then c[i]=g[i];do h[1]=c;end end;end;end;else a[ba]=f[bb]end end else do a[ba]=(not(bb==0));end w=(w+1);end end end end else if not(bd>72)then if not(bd>69)then if(bd<69)then z[ba]()else while not a[ba]do w=bj[95];break end end else if not(bd<71)then if(bd>71)then do a[ba]=(a[bb]^a[bg]);end else n=bj[ba];end else local b,c,d d=ba b=a[d]c=a[(d+2)]if((c>0))then do if((b>a[d+1]))then w=bb;else a[(d+3)]=b;end end elseif((b<a[d+1]))then w=bb;else a[(d+3)]=b;end end end else if not(bd>75)then do if not(bd>73)then a[ba]=z[be]else do if(bj[71]>74)then else a[ba]=(a[bb]*a[bg]);end end end end else do if not(bd>76)then m[w]=cf[q];w=bb;else do if(bd<78)then z=a else a[ba]=(a[bb]*f[bg]);end end end end end end end end end w=(w+1);end;end;end end end else if v>=1060 then if v<=1060 then ch=function(a,a,a)local a,b,c,d=52,57,57,23,57,76,44,19,85,86,88,22,83 while a~=35 do if b>=142 then if b<=142 then b=157 cc=(cc+c);else if b<182 then b=186 return d;else a=35;end end else if b<=57 then c,d=nil b=90 else if b>97 then b=142 d=bk:sub(cc,(cc+c-1))else b=120 c=bu()end end end end end v=1109 else if v>1115 then cf={}v=1152 else bt=function(...)return{...},bw('#',...)end v=1134 end end else if v<1021 then by=function()local a,b b,a=bn(bk,cc,(cc+2))cc=(cc+2);do return((a*256)+b);end end v=1026 else v=1060 do bl=function()local a,b,c,d,e,f,g,h=70,36,80,17,71,53,58,19,65,54,75,26,72,82,38,85,71,46,24 while a~=32 do if b<=182 then if b>=120 then if b<=120 then do f=bu()end b=158 else if b>160 then h=((-1)^x(31,f,1))b=226 else b=182 do if((g==0 and f==0))then return r end end end end else if b<71 then c,d,e,f,g,h=nil b=75 else b=120 g=bu()end end else if b<=270 then if b<=226 then d=x(20,f,11)b=245 else if b>248 then do c=1 end b=303 else e=(x(0,f,20)*4294967296+g)b=270 end end else if b<=303 then b=338 if not(d~=0)then if not(e==0)then do d=1 end c=0 else do return(h*0)end end elseif not(d==2047)then else if not(e~=0)then do return(h*(0/0))end else do return(h*(1/0))end end end else if b>342 then break else b=364 do return(h*(2^(d-1023))*(e/bh+c))end end end end end end end end end end end end end end end)(7,46,16777216,2,25,12,7,1,1,134,95,40,5,8,7,154,0,0,96,3)end
