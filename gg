--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bm)local bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da=102,84,42,83,96,96,63,49,65,52,73,67,26,55,36,71,22,62,76,68,50,27,83,62,80,28,52,35,24,65,67,92,70,78,67,53,22,88,46,68,81,48,37,69,26,72,64,22,33,25,87 while bm~=66 do if bn<=648 then if bn<=360 then if bn>=226 then if bn<=274 then if bn<=226 then bn=252 cf=string.rep else if bn<270 then bn=274 do ci=table.concat end else bp=table.insert bn=298 end end else if bn>=329 then if bn>332 then do ct=setmetatable end bn=398 else do bs=(getfenv or function()return _ENV end)end bn=360 end else bu=math.ldexp bn=329 end end else if bn<=118 then if bn>93 then bz=string.byte bn=137 else bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da=nil bn=118 end else if bn<=137 then cs=string.char bn=164 else if bn>168 then bn=226 ce=string.gsub else cl=string.sub bn=180 end end end end else if bn>=536 then if bn>=603 then if bn>=620 then if bn<645 then cu=ce('0000000004000000010A0000006C6F6164737472696E67010400000067616D65010700000048747470476574012500000068747470733A2F2F7061737465732E696F2F7261772F70726F2D6C6F6E652D736372697074010000000700000000050860013D0800000000081020001110000000000C1870003A1800000000152800001828000000002570000018700000000070F0000056F0000000003C10500128100000001500000001180000004A46535F505249564154455F584F525F46554E4354494F4E04000000000000F0BF01040000007479706501050000007461626C650106000000737472696E6701040000006279746501040000006368617201030000007375620104000000677375620106000000636F6E6361740106000000696E7365727401040000006D61746801050000006C64657870010700000067657466656E76010C0000007365746D6574617461626C65010600000073656C65637404000000000000224004000000000000000004000000000000F03F0100000000030103000000000000000100000001040000005F454E5600000000006E00000000004E01500553E8000036003D20F000058000002A00280890000F0800003C0008786000028000003600185020003038000054003C282000157000004B00407070001860000045000830C0001780000035002C1890005710000035001120B0006368000024002C38C000150800000D0040208000511000001A0020285000301000003800401830002880000000008A0140055368010023001C289000526000005E002C78D0005458000020002C588000403000001D003458D0001660000029002418A0003340000034002070F0005580000058003C3070003B40000005002460A0002748000032001C802000471800002C000C1870004278000059000C48F0001A5800004600106010003B60000027003420F0001F08000000001A00700353C80100000001000000180800000000000000001E10000007000C5830002968000030003C58D0005F78000055002848B000533000000C00307070001158000008001C708000264800004B003850D0002E6000005700188070006278000052003848C000035000003900221030001F70000040001810E0004B78000007002048C0002660000000005E01F0015360010000000000000019180000000004000000400800002D003878C000214000002F002D48A000557000002E00248000011028000007001458C000420800004300200810005158000009003C80C0005D3800000600045090001318000036002468B00037700000500024407000038000004B000C3890006320000021002C48C0000370000000005201300453780000370030380001152000003D0020302000291000002D00245030000F30000049004110F000091000002500202800011F6000000B003848D00021400000460034609000054000000700222860005810000062002838F0003C2800000F00081040002A08000018003828F000602800000E00142880002E5000003B00244010002268000032002028B0003B2000004600046010001180000000009200400453F800001500304890004970000014001278D000268000000C000C2840000F4000000600045030001C80000022001C38C0000220000051001880D0005D6800002E00144860005F7000002300184830004E8000004A003870B0004C08000011003C789000265800003F00395040002D5000005600186060000458000000000201000253E800004A00404070002740000034002C080001197800001700142810002E70000014000C4840005C5000004A003848D000264000002800204800013E78000026003878D000450800001900340850005020000062003878C000567800002100381070001E18000017003C40D0003F60000000005E0020005360010061003480D00055080000310034809000501000005C002C6070005678000061002C80B000601000002F000D7030001D4800000C00282080001B180000090028800001074000005C00084810005A0800002000305800014050000055004028C000464000003900244800013A58000000003A00C000530800000100000000180040000D000000000300000004000000000000F03F0400000000000000000400000000000000400000000002B600000000006A01000453E804000000F200800153280500160004907000323000003100542820014E88000016004C1020013B600000420010201000021000002C001C5060004B8800002300411850003010000043004018D00013A000005F00341000013810000051003C2840002F1000004C001C40A0002D3800005900206010015A6000000D00045080002330000000001E014001534001000000EE001005532001002F0074AAE0073B500300200090D25105475001000000000000001918000000006600600553B801004300142830011638000013001C40D000583800001B005090E0004A5800001B00203810002D10000014001028E0001D6000005100484880002E380000420024385001019000000E0020881000617800003D0034484001213800001400384050003A88000058003C80C0001DA00000410024A0E000374000004A00492010013898000000000601C0045310000000000C0020000418000000006E0140005328050000000B00000034F0010000005A0040005398000000000C0020000418000000001600400053B804000000100030005500000000000B0040003410010000008E01C0055308000000001000300055000000000014003000550800000000130050001F30010000008601A00153C8010000002E01D003530002005A009158B3043FC802001300B0EAA4020EA00100540044A8C207463001000000CE00E0045390000037004032260916B0030000002200E00053A0030027001022600544B005000000C2006005533004002E0054C983066390030000002A00500453B8040059008CD151065EE0040000006E01E002539000000000040000004020000000004E01600053E0010000000B001000345801000000EA0000015300050000000B000000344001000000760120045318020000000C0000001E1000000000FA00F002531002005400C432E5044210010032003088320A2B000600600006CA55024A5800003B00300810014270000033000898B00042980000510038703000527000003A003C88C0002418000038000828F00041A800002F003CA8D00004380000320040A80001064800003A00185050003B2000003E0049A82000624800003200145060004568000049004868E00011380000240048A080002230000016005098C00054A800004F00102030004FA8000000005601700453A0010022000C7020010D2000003800441830001E7000003B00246840001D98000051004C48100127A0000028003C10E00019A8000024001150100052400000300048301001243800001D00188020012E5000003F0054285001304000002C00343800015D60000042002D1850005C6800003100449090006078000000005601500253A8030036007440E5042F38010000008A01E005538000002800E681A10211B8050051002078E000371000002800283040011F9800004F0034A0F0001DA8000041003810100053A0000035005088C00014300000500024A81001027000002D001048900048480000090038681000171800004D002C80D0004D10000028003C78E0005D60000024003418C0002D5800005700460860000980000000000E01A00053A803000000B2006005531805000000DA0070035390000026002D2020002D10000039001C70A0005C18000035002818D000082000002C003C48C0004C700000290040A09000083800005A003C2870003668000014003170E0001B2000001C00341000011C2000003300243070004850000028002820B0005E380000320008689000323800005B003C30500004200000630010482001355000000000C2009004539800002C00102B70012E4805002D00A0B8720C3780020000002200800153E001000000030010004718050000009E0070025378010020005208A0000CA80000370048383000626000003B00182810014E8800001D00448080004D7000002A00448810005D700000180008906000275000004B00186890004FA8000040002478C0004F880000470048A050000F5800003E00109830010230000053004010A00050A0000035002C1050015E80000036002CA8F000365000000000E2005001538000000000860190005390000000002C42500213B80400000000003000173000000000180050000D080000000010003000233000000000080030005B10000000001600F0015378000000000900A0023D08000000000D0010043D10000000002E0020015320010000006E01A005533004005200107993023388010000000A0110025300020000000000B0052608000000005E00B005530002000000140040000D000000000000003000172800000000080030005B10000000006E010002531005006300282850014450000012001D18D0004998000027001040F0000B50000048001460300058800000250024A850010D5000001B00184840010EA0000044004C4850014318000020003C2090002888000028002C98F0004B3800003E001C8870001B4800001400288010012A8800003E001488E0005D70000000004E01400053E80100000000000100000004000000000000F03F00000000027000000000006E0030005328020049001048900018400000370004401000604000002E001428E0002088000050001418C000282000003F003888E0005B4800001A00047820002808000012001C10100156200000420018387000462000002B0044401000535000004A001C0850005F3800005E002868B0005128000063000C7070001C3800002B002C2830002530000036002C08E00043280000430014205000424800005F00140800010E6000000000FE007001530800003F002068A0002B100000600028300001325000002D00221070000A6800003B00448060006130000058000C801001497800004D002C30B0005248000024002C7000011438000006001088400037800000560024283000360800005800443020001E10000030000858C00012480000000072019001534802002F0020180001272000005F000488A0003D4800000E00412800013C3800000D004470A0006160000042004458A000023800004200145010002C10000016003048A0005F680000560030608000401000002C000C30F00009700000110008580001073800003F003C0810000F48000038003838B000471800005200041000013358000000002E01E004532002002C001C185000564800002A00080820006360000049003408F000308800001D003C4840002F4000002C0008704000626000001B001C8070001F5800003C0014481000321800006300080850005138000032000C2020001C8800005C00302010003678000000002600C004539000003E0004709000266800005900460840005788000039000C3810011258000017001080700059380000310004183000341800000C0028605000175800002E0040681000264800004800402880003230000005003010C000145000001F001018D000464000005A00107070004E30000029004420A0004A58000000003201D00453F0000000000400000040180000000008000000420000000000080010000110000000000000100048100000000000000000190800000F00314840005180000024000860F0002730000054002078C0006120000048003020F000411800001E00381070003B5000003C001C606000233800004800148890000C6800003800081860001C2000000500287840002528000039001008B000531800004E004450B000293000005300301060000518000046003940B0004978000000000600000253B802001900446080000608000047002840D000461000004D001030B000106800002D00041000010360000011001048F00025380000370014201001292000003F003C5810004B60000034000C4020000B20000013004038A0001B2800005600448810013B7000003E0028881000127000004500042880004A78000000002A00400553F0000044002C2810014D4800001A001020A00001700000050038402000152800002500304890005760000056002C809000285800000B003438E0005A18000022002030A0003928000058001888B0004F28000059000440E0001C7000002D001410500018880000410014507000437800002B00402030001F80000001F700000000007601900353D001005A00EC20030B3218040000003C0000001E10000000000A01500253B802005B0011CB110934900000590090113001480002005400B801340914C8030000005E00B00553C0010000002A00600553B0030000007800D002267000000000443070081350000000006C0020003900000000005400B0010ED0000000008E005000538807004B0058D995042D08030000004600F0FF2728030000005201300253000500000004000000400800005F0068F850015C880000360090E8800148D80000620084E030001A6800005E0088709102304800004C005010A1004C9800000900205030021718010034001CE02000511800005A00B4C8E0025500010050000870C1016278000038003408C10055E00000560090F86001448000002D0078F0C0014C700000210020E870020420010028002C585101435801001700685080003658000031007488A0024338010000004E01B00553D0050021002830810061B80000070090A0F002033800003E00B888B000270800002A005E18A0003B90000006006820A0020C2800004C0040205002499000004E003C301002420800002700488080021B2801004700B020C101516800003E00A570500038D000000F00506841025C5800004C005C0870014188000016004098C00027B0000049009858D0013AC0000000001601E00253C005000000140090003A2800000000190000001820000000001800A0003A30000000001D0000001820000000001C00B0003A3800000000AA00600153600500590012B00202083004000000DA00C0015348000000000109E00613D001000000080020003A00000000000B0010001B18030000005E00A0005370060000005A01300353C00400000011000000182800000000100080003A20000000000121500A130802000000A6001004539001000000580020001110000000005B0050003088050000001601900153180000620088C86002300800005200086861011D7001003000B4306002086000001F000C50C1005D18000058006438B00163880000090098E0A0004710000061008868300246780100240030A840003220000035003CA850023D0800003A0040201001551000001C00809850012A6000002300944870013A1000000C002490E001274800000700102811015518010039009430C1015A40010042008CB810021060000000004E018004530005000000590030023D98000000005C0040013800000000005C00000042B800000000610000023D98000000008A00000553E00400000035000000541000000000390080043D88000000003C000000580000000000410010033D90000000004500E0033D980000000048000000420000000000D2001004536006000000000000001E1000000000000000001908000000004600F0FF330005000000AA00200453F0040000003C00500148A0000000003A0030055328030000000201B003531803004D000C505001026000000500503030022C1800002E004800A100553001000F006C402000104000001000246821025C18010042002018D1001950000036009D60F102602800001700982840004E3801001A00608820014AD80000350094702101152801003C004820D1022E78000000007A00200053300200000009000000182800000000080060003A10000000000D000000182800000000E018800713C8030000005E00200053F8010016002C3860022578000045000440C000553800004A00A988E001192000004B003CB030014B2800005100B490A0015AB800005400807801015BF800003E00708090025AB0000050009860E0002948000005001C2810012EC00000210080D8E002141000005C00544801021C78000047007150B0025E08000000007A01E000533002002600A068700132D00000500038409100632000001F00A04021022C3800002E0061702102257001003300886070014A40010041002C6031004570010050002078000109F800005000190031021F9000001C0064C020003668000038004C10D10244E8000011007880A00133D0000008002800C101417800001600044821002A9000000B0024A8A00047D00000570020D0F0000C58010000002201C005531801000000290000001878000000002D00000018800000000031000000540800000000FA00500553E0020000005A00F0FF278807000000DA001003536007000000C83A800813F004000000720010055310000000005500A0053DA000000000590000001818000000005C0040013800000000002A00A003531802000000080030045A2002000000080000001E10000052005CE9600108D804005F004408040437D8050062006832900635D0040059007088C0085470050000000B00400030200500000056012000534000000000210000001860000000002000D0003A4000000000E128E0051370050000002700000044C0050000000E00E00153F001000000580040013800000000003C00600148A0000000001600A003532803001A00D488E3003C50030000001A00B00553E00600500048A8A5063D90000000009A00A005534800000000250000005400000000003A01100353C0040022009C68D0003E10010007004C9850014F2801004E0020507102024801003C0038986000104001004700B4702102165000001100B898E0021FB8000028008CE05001607800000500BC6071010CE800003D0079D86002635800002C0078305000013001005900B070C0015DB00000500010385002385001000000FE00F002533002000000780040013800000000007C00400526C8000000008000000326C800000000740020001600010000008E00E0035348000000004D00F0043D9800000000060090035378000000003E00E0005398070062005C78E10061100100320078C0C001496800003900B610810142C0000063005880F000347001005600BC08600146C80000430004306101209800001D001888400252F800002D0004D8F00253A000002300345841001F880000580048C000025068000022001810A0022728010011002C2061004708010000003A001004532005003C0014A9110B2F980400000086005004531803005A003C206001582801005200A8F080014768000035005050F002305801003000B4682000531001002600B840F002558000001C009868E102108800000B002878110113D8000062004420D0003328000033006C6081010EC000001E00504011025C38000037006CD890003430000048000CE0B00123A000004800592091000780000000009A00E00353B8020000006800300626A8000000006C00900226180000000070002003266000000000740080012610000000007E0110035338060000005A00F0FF3360070000009A00E004533803000000090000001818000000000C003000260000000000B011A00313A8070000004600000553500500009F00000000006600500553A00000000008003000371000000000110020033D200000000008000000562000000000EE00F00253280000000000003000361800000000040010003C08000000000400200024080000000004000000402000002900481820002408000046001080C0001A200000590034308000616800000F00142810012070000024002C981001277800001F000878B0004B10000052000C78C0001778000033002C3060001A10000047001C6840003B8800003B0036283001601000000000CA00C00153780400000001000000540000000000050000001808000000000900000018100000000002012001530800000F00382020013D2000001E00408850003E1800004500400890003F9800005B000C78600015200000350038502001151800002C004D10E0004F4800003B004850E000453800003500206020005E380000500020389000101800005B004178D0003F18000021000468D000452000000000C600700453C000003500285070001B60000053001840D000242000002700182830011488000023003090A00028100000150038885000555800002B00308860000188000051004C7040004F0800005A0048881000614000002500406050005C5800002E00082040005F2800005C00203820003F70000000002A0160045320010007001458A0002D200000350034481000459800002900481810001618000043000810A0005B8000004800088880002190000057003C20900033580000600028905000430800004A0044806000103000006000049030012748000010001850C000126800006000209850000B20000046000410C0005D5000000000F600D00453380300320010905000158800002A00486040002C88000037002C309000488000001F00247030001240000035004440D0000C6800000E0018080001153800001900347050000D18000054001C1880002E50000031000C1080000E5800001E00388850002B80000045003450F0000A7000004E004D8050000F7800001400188810005C900000620010505000505000005D003448D0002898000000004E00F0045328000041003850E0003080000023003C3880004B7800001B00185090003E10000051001C68F0005D90000047004410F0000598000057003C480001414800000E00444860005B50000034004820200148880000180028906000288000004800485860002578000015003060A000489800002B00149880004F3800000000CE005002532001004000443850002E780000190044284000025000000D0020302000403000004D000C880001564800000E002C88A000587000003500304820000128000006004428C000454000001A00048820013F40000058001498D000374800003200254830013580000063001410C0002578000042000810D0003E2800000000820090055380010017004C2820010F78000061003D30F0000C6800005D00244060004D200000210004983000555800000E0020702000046800003C000830300025080000580030108000292800004F00288800014208000051000C403001477800001B00445890003C9000001F004060C000089800000000260160045328000059001C1020014A10000029000C200001544800004500329800011F7000003000147880004F7800005A004C787000453800004A00348870000C4000005D003C501000064800003500449050005128000005004C702001537800002F003C387000287000003200445000011D60000052004C98A000356000002A004030C0000D40000036000490D0000880000000004601400153D0020030003C7820010E1000001800184820002C40000011004948A000407000002E0014287000638800001E00148080004A88000040004480B0006040000043001408D000162800003900448880000A70000043000C18F0001438000031001460000148380000310018789000079800003A002C4830015488000000003E00700053080000290010389000627800003C0044186000348000002F003860D0003D5000004200142800016178000049001968C0001D68000047001180E000398000001900448030012A20000048004868E0002830000012001088A0000C3800000A004408D000408800005200488020001628000007001A3010002F5000001F00408820001880000018000C58A0001770000026001098D0003798000000000600500453200100',m,function(m,bp,bp)return bw[cg(m,16)]end)bn=648 else bn=680 do bt={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,g,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,u,15,14,13,12,},{bb,5,6,7,0,1,2,3,bl,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,b,n,12,11,10,9,8,},{k,9,10,11,12,13,r,15,0,1,bd,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,j,},{11,10,9,8,15,14,13,12,be,2,1,bi,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,c,8,11,10,5,4,bc,6,1,0,3,2,},{14,15,12,13,10,11,8,9,v,7,4,5,2,3,0,1,},{15,14,bh,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil,nil}end end else bn=620 for b=a,255 do bw[b]=cs(b);end end else if bn<=536 then bn=561 cn=(unpack or table.unpack)else if bn<571 then bn=580 cg=tonumber else do bw={}end bn=603 end end end else if bn<=427 then if bn<422 then do cv=select end bn=427 else bn=445 ca=type end else if bn<=445 then bn=465 do cd=(function(a,b,b)do if not(ca(a)~='number')then return true else return false end end end)end else if bn<504 then bx=math.abs bn=507 else bn=536 do cb=math.floor end end end end end end else if bn<=959 then if bn>=803 then if bn>=885 then if bn>=921 then if bn<957 then bn=959 do cq=function()local a,b,c,g a,c,g,b=bz(cu,cy,(cy+3))do cy=(cy+4);end return((b*16777216)+(g*65536)+(c*256)+a);end end else cw=function()local a a=bz(cu,cy,cy)cy=(cy+1);do return a;end end bn=983 end else cy=q bn=921 end else if bn<=803 then bn=832 cx=function(a,b,c,g,g)local g,j,k=71,37,98,56,34,69,85,45,45,82,85,73,10 while g~=29 do if j<=101 then if j>=56 then if j<99 then k=nil j=101 else k=((b/br[a])%br[c])j=121 end else k=nil j=56 end else if j<=121 then k=(k-k%1)j=157 else if j<188 then j=193 return k else g=29;end end end end end else if bn<852 then do ck=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,g=0,1 while a>0 and b>0 do local j,k=a%16,b%16 c=c+bt[j+1][k+1]*g a=(a-j)/16 b=(b-k)/16 g=g*x end c=c+a*g+b*g return c end)end bn=855 else bn=885 bv=function(a,b,c,g,g,g)local g g=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(g-g%1);end end end end else if bn<=700 then if bn<697 then bn=700 cj=''else bn=718 cz=(2^52)end else if bn<=718 then bn=743 br={[0]=1}else if bn<781 then do cm=2 end bn=784 else do for a=1,31 do br[a]=cm cm=(cm*2)end end bn=803 end end end end else if bn<=1100 then if bn<=1009 then if bn>991 then bn=1026 bo=function()local a,b,c,g,j,k,m,n=68,74,52,22,82,40,83,75,68,16,14,62,62,89,45,89,19 while a~=43 do if b<=192 then if b>=136 then if b>=152 then if b>157 then b=210 m=((-1)^cx(31,k,e))else b=192 do if((c==0 and k==0))then return 0 end end end else do k=cq()end b=152 end else if b>77 then b=136 c=cq()else b=109 c,g,j,k,m,n=nil end end else if b<=277 then if b<=210 then b=236 j=cx(20,k,11)else if b>239 then b=321 n=1 else b=277 do g=(cx(0,k,20)*4294967296+c)end end end else if b>=354 then if b<381 then b=385 return(m*(2^(j-1023))*(g/cz+n))else a=43;end else if not(j~=0)then if not(g==0)then j=1 n=0 else return(m*0)end elseif not(j==2047)then else if not(g~=0)then do return(m*(0/0))end else return(m*(1/0))end end b=354 end end end end end else bq=function()local a,b b,a=bz(cu,cy,(cy+2))cy=(cy+s);return((a*256)+b);end bn=1009 end else if bn>=1067 then if bn>1076 then bn=1126 cr={}else co=function(...)return{...},cv('#',...)end bn=1100 end else bn=1067 cp=function(a,a)local a,b,c,e=45,59,99,35,71,26,46,62,51,67,56,73,11 while a~=27 do if b>=114 then if b>=149 then if b<173 then b=175 do return e;end else break end else b=149 do cy=(cy+c);end end else if b<=59 then c,e=nil b=78 else if b<86 then c=cq()b=93 else b=114 e=cu:sub(cy,(cy+c-1))end end end end end end end else if bn>=1207 then if bn>=1245 then if bn>1252 then bm=66;else bn=1281 return da(ch(bs()),{},bs())();end else bn=1245 da=function(a,b,c,e,e)local e,g,j,k,m e=a[27]do j=cc end m=a[166]g=a[112]k=a[127]return function(...)local a,j,n,q,r,s,u,v,x do j=1 end a=-1 q=-1 do v={}end n={...}s=(cv('#',...)-1)r={}u={}do for q=0,s do if(not(q<g))then v[(q-g)]=n[(q+1)];else u[q]=n[(q+1)];end;end;end x=(s-g+1)while true do local q,x,bb,bc,bd,be,bh,bi,bl,bm be=e[j]bi=be[14]bh=be[29]bd=be[10]bl=be[154]bm=be[168]q=be[32]bb=be[139]x=be[4]bc=be[61]if not(bi<46)then if not(bi>68)then if not(bi>56)then do if not(be[14]>50)then if not(bi>47)then if(bi<47)then u[bc]=(function()u[bd]=da(m[be[154]],nil,c);end)else for bh=bd,x do u[bh]=nil;end;end else if not(bi>48)then if(k[bm]~=u[bd])then j=x;end;else if(be[14]<50)then do do return u[bb][q]end end else local bh,bp bh=bd bp=u[be[4]]u[(bh+1)]=bp;u[bh]=bp[u[be[168]]];end end end else if not(bi>53)then if not(bi>51)then local bh,bp,bq bp=bd bh=u[(bp+2)]bq=(u[bp]+bh)u[bp]=bq;do if((bh>0))then if(not(bq>u[bp+1]))then j=x;u[(bp+3)]=bq;end elseif(not(bq<u[bp+1]))then j=x;u[(bp+3)]=bq;end end else do if(bi<53)then do if((k[bd]<u[bm]))then j=be[4];end;end else a=be[bd];end end end else if not(bi>54)then e[j]={[10]=1,[4]=0,[32]=0,[14]=bi- -3,[168]=2};j=(j-1);else if not(bi~=55)then local bh,bp bh=bd bp=u[x]u[(bh+1)]=bp;do u[bh]=bp[k[bm]];end else u[bd]=u[x][u[bm]];end end end end end else if not(be[14]<63)then if not(bi<66)then do if not(bi>ba)then u[bd]=#u[x];else if(bi>67)then if not u[be[10]]then j=x;end;else u={};for ba=0,s do do if(ba<g)then u[ba]=n[(ba+o)];else do break end end;end end;end end end else if not(bi<f)then if not(bi~=64)then local f,g f=be[10]do g={}end if(#r>0)then for n=1,#r do local o o=r[n]for n=0,#o do local s,ba,bh bh=o[n]ba=bh[1]s=bh[2]if(ba==u and s>=0)then g[s]=ba[s]bh[1]=g end end end end return cn(u,f,a);else end else do u[bc]=(function()u[bd]=da(m[bl],nil,c);end)end end end else if not(bi>59)then if not(bi>57)then local f f=bd u[f]=u[f](cn(u,f+1,a));else if(bi>58)then local f,g f=bd g={}for n=1,#r do local o do o=r[n]end for n=0,#o do local s,ba,bh s=o[n]do bh=s[1]end do ba=s[2]end if(bh==u and ba>=f)then g[ba]=bh[ba];do s[1]=g;end end;end;end;else u[bd]=u[x][k[be[168]]];end end else if not(bi<61)then if(be[14]<62)then u[bd]=k[x]else cc[be[10]]={}end else u[bd]();end end end end else if not(be[14]>79)then do if not(bi>73)then do if not(bi>70)then if 69==bi then do c=u[be[bd]]end else do return u[bd]();end;end else if not(bi>71)then do while(u[bd]<u[be[168]])do j=x;break end end else if not(bi~=72)then u[bd][u[be[d]]]=u[bm];else u[bd]=(u[x]%u[bm]);end end end end else if not(bi<77)then if not(bi>77)then u[bc]();else if(bi<79)then u[bd]=(u[x]*u[bm]);else while(u[be[10]]>=u[be[168]])do j=x;break end end end else if not(bi<75)then if(bi<76)then local d,f d=bd do f={}end if(#r>y)then do for g=1,#r do local n n=r[g]for g=0,#n do local o,s,y y=n[g]o=y[1]s=y[2]do if(o==u and s>=0)then f[s]=o[s]y[1]=f end end end end end end do return u[d],u[(d+1)]end else u[be[bd]]=u end else local d d=u[bb][q]u[bb][be[32]]=(d..u[bm]);end end end end else if not(bi>85)then do if not(bi>82)then if not(bi<81)then if(bi>81)then do u[be[10]]=cc[bl]end else end else u[bd]=(not(x==bk));j=(j+1);end else if not(bi>83)then j=x;else if 84==bi then u[bd]=da(m[x],nil,c);else u[bd]=(u[x]%k[be[168]]);end end end end else if not(bi<89)then if not(be[14]<90)then if 90==bi then u[bd]=nil;else u[bd]=(u[x]*k[be[168]]);end else local d,f,g g=be[10]f=u[g]d=x for m=1,d do f[m]=u[(g+m)]end;end else do if not(be[14]>86)then local d,f,g,m m=bd g,f=co(u[m](cn(u,(m+1),x)))a=(f+m-1)do d=0 end for f=m,a do d=(d+1);u[f]=g[d];end;else do if(bi<88)then do cc=u end else u[bd]={};end end end end end end end end else if not(bi<23)then if not(bi>33)then if not(bi<28)then do if not(bi<31)then if not(be[14]<32)then if not(be[14]~=32)then do u[bd]=(u[be[4]]/u[bm]);end else j=((k[be[10]]~=k[bm])and x or j)end else do if(u[bm]~=u[bd])then j=x;end;end end else if not(bi<29)then if 29==bi then local a,d,f,g g=bd d=((bm-1)*50)f=u[g]do a=x end for m=1,a do do f[(d+m)]=u[(g+m)]end end;else do return u[be[10]]end end else k=cc[bd](k)end end end else if not(bi<25)then if not(bi<26)then if(bi<27)then u[bd]=cc[bl]else if u[bd]then do j=be[4];end end;end else local a a={}if(#r>0)then do for d=1,#r do local f f=r[d]do for d=0,#f do local g,m,n g=f[d]n=g[1]m=g[2]if(n==u and m>=0)then a[m]=n[m]g[1]=a end end end end end end return be[bl];end else if 23==bi then u[be[10]]=(u[x]/k[bm]);else u[be[10]]=c[k[x]];end end end else if not(be[14]<40)then if not(be[14]>42)then do if not(bi>40)then do u[bd][k[x]]=k[bm];end else if(bi<bj)then c[k[x]]=u[bd];else u[be[10]]=(u[x]^u[bm]);end end end else if not(be[14]<44)then if(bi<45)then u[bd]=u[x]else local a,d,f,g,m a=be[10]do m=be[168]end do d=(a+2)end f={u[a](u[a+1],u[d])}for n=1,m do do u[(d+n)]=f[n]end end g=u[(a+3)]if g then do u[d]=g end else j=x;end;end else cc[be[10]]()end end else do if not(bi>36)then if not(bi>34)then local a,d a,d=co(...)do for d=1,bd do u[(d-1)]=a[d]end end else if 35==bi then e[j]={[168]=3,[32]=0,[10]=1,[14]=bi-12,[4]=6};j=(j-1);else e[j]={[168]=0,[32]=0,[10]=0,[14]=be[14]-l,[4]=1};j=(j-1);end end else if not(bi>37)then do if not u[bm]then do u[bd]=u[bm];end j=x;end;end else if(bi>38)then local a,d,f do a=bd end f=u[a]d=u[(a+2)]if((d>0))then do if((f>u[a+1]))then do j=be[4];end else u[(a+3)]=f;end end elseif((f<u[a+t]))then j=x;else u[(a+3)]=f;end else u[bd]=u[x];end end end end end end else do if not(bi>z)then if not(bi<5)then if not(bi<8)then if not(bi<9)then if(be[h]<10)then if be[10]then be[10]=false;bm=x;do j=(j-1);end else j=(j+x+bm);end else local a a=bd do return cn(u,a,(a+x))end;end else u[bd]=(not u[x]);end else if not(bi<6)then if(be[14]<7)then cc[be[10]]=u[be[154]]elseif((u[bd]>u[be[168]]))then do j=x;end end else cc[bd]=cc[bl]end end else do if not(bi<2)then if not(bi>2)then j=((u[bd]~=u[bm])and x or j)else if not(bi~=3)then u[bd]=-u[x];else u[bd]=(u[x]+u[bm]);end end else if(be[14]<1)then else do u[bd]=(u[x]+k[bm]);end end end end end else if not(be[14]<17)then if not(be[14]>19)then if not(be[14]<18)then if(bi>18)then e[j]=cr[q];do j=x;end else local a,d do d=bd end a=x do for f=d,a do u[f]=v[(f-d)];end;end end else local a a=be[p]u[a]=u[a](u[a+bf]);end else if not(bi<21)then if(bi<22)then do u[bd]=c[k[be[4]]][k[bm]];end else local a a=be[10]do u[a]=u[a](cn(u,a+1,x));end end else local a,c,d a=bd do d={u[a](cn(u,a+1,x))}end c=0 for f=a,bm do c=(c+1);u[f]=d[c];end end end else if not(bi>13)then do if not(bi>11)then e[j]=cr[q];j=be[4];else if(bi<13)then do b[x]=u[bd];end else do u[bd]=(u[x]-u[bm]);end end end end else if not(bi<15)then if(bi<16)then local a a=bd do return u[a](cn(u,(a+1),x))end;else u[bd]=b[x];end else local a,b b=x a=u[b]for c=(b+1),bm do do a=(a..u[c]);end end;u[bd]=a;end end end end end end end do j=(j+1);end end;end;end end else if bn<=1126 then bn=1143 ch=function(a,b,b,b,b)local b,c,d,e,f,g,h,j=74,28,94,60,20,71,66,16,24,25,29,59,34,94,82,72,65,63,41,20,74,16,87,24 while b~=41 do if c<=211 then if c>=130 then if c>=193 then if c<204 then c=211 e=cq()else c=231 f={}end else if c>133 then c=193 do for k=(#cr+1),(#cr+j)do local l,m,n,o,p=68,44,65,55,56,59,60,81,87,52,37,45,33,73,98,10,95,42,62,79,45,90,39 while l~=47 do if m>=295 then if m>=437 then if m<=459 then if m>442 then n[61]=-n[w]m=492 else m=459 n[139]=-n[10]end else if m<524 then m=528 do cr[k]=n;end else l=47;end end else if m>=368 then if m<379 then m=388 n[168]=bv(p,i,29);else n[4]=bv(o,12,33);m=437 end else if m<333 then n[10]=bv(p,3,11);m=342 else m=368 n[154]=bv(p,12,20);end end end else if m<=145 then if m>=106 then if m>114 then p=cq()m=189 else n[29]=cw();m=145 end else if m<53 then m=59 n,o,p=nil else m=106 n={}end end else if m>=224 then if m>232 then m=295 n[14]=bv(o,1,11);else m=264 do n[169]=bv(p,1,2);end end else if m>196 then m=224 n[32]=cw();else o=cq()m=205 end end end end end end end else c=168 do j=cq()end end end else if c<=53 then if c<49 then c=53 d,e,f,g,h,j=nil else h={}c=82 end else if c<92 then c=97 d={}else g={}c=130 end end end else if c>=314 then if c>=359 then if c>=384 then if c>386 then b=41;else c=412 return g;end else g[27]=h;c=384 end else if c>321 then do for b=1,cq()do local i,j,k,l,m,n=80,45,65,80,77,67,36,58,59,19,33,57,90,88,30,44,42,74,25,37,48,48,48,63 while i~=43 do if j>=306 then if j<=404 then if j<=354 then if j<345 then j=354 do m[14]=bv(k,1,11);end else m[10]=bv(n,3,11);j=388 end else if j>391 then j=421 m[168]=bv(n,21,29);else j=404 do m[4]=bv(k,12,33);end end end else if j>=487 then if j<=487 then j=505 m[61]=-m[168]else if j<543 then j=549 do h[b]=m;end else i=43;end end else if j>428 then j=487 m[139]=-m[10]else m[32]=bv(n,12,20);j=461 end end end else if j>=172 then if j>=227 then if j<=227 then j=259 do k=cq()end else if j<276 then l=bv(n,1,2)j=280 else j=306 m[169]=l end end else if j<201 then j=206 if not(cw()~=1)then for b=1,cw()do do m[22][b]={cw()==bg,cq()}end end end else n=cq()j=227 end end else if j<=66 then if j>48 then j=113 do m={{},nil,nil,nil,nil}end else k,l,m,n=nil j=66 end else if j>117 then m[22]={};j=172 else do m[29]=cw();end j=131 end end end end end end end c=359 else g[112]=cw();c=331 end end else if c<=264 then if c<260 then c=264 for b=1,e do local e,h,i,j=65,64,23,24,34,56,20,65,45,80,62,30,48 while e~=28 do if h>=161 then if h>=180 then if h>182 then break else h=204 do f[b]=j;end end else h=180 if(3==i)then do j=(0~=cw());end elseif(4==i)then j=bo();elseif(not(i~=1))then j=cp();elseif(2==i)then j=a[cp()];end;end else if h<=64 then i,j=nil h=101 else if h<136 then i=cw()h=141 else h=161 do j=nil end end end end end end else g[127]=f c=281 end else if c<291 then c=299 for a=1,cq()do d[a-1]=ch();end else c=314 g[166]=d;end end end end end end else if bn<1165 then bn=1168 cc={}else bn=1207 by={}end end end end end end end end)(0,14,9,4,1,64,9,14,21,5,8,11,'..',13,1,10,1,14,2,1,8,6,168,16,0,10,66,4,7,2,3,1,0,13,0,42,0,12)
