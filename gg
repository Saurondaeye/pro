--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,x,x)local x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=109,49,47,29,90,56,25,95,66,23,30,92,37,18,17,95,75,66,81,73,69,94,77,29,45,14,30,32,62,20,10,54,13,64,77,22,34,67,10,11,39,50,68,12,67,98,67,92,64,29,80 while x~=68 do if y<=777 then if y>=414 then if y>=583 then if y<=668 then if y<=583 then bz=(unpack or table.unpack)y=628 else if y>631 then y=703 by={}else y=668 bf=tonumber end end else if y>=732 then if y>735 then y=815 cb={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{u,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,o,r,i,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,c,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,p,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,a,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,v,3,2,},{14,15,12,13,l,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}else y=777 bm=cjfunction(a,c,c)return by[bf(a,16)]end)end else y=732 for a=0,255 do by[a]=bj(a);end end end else if y>=471 then if y<=471 then bl=(function(a,c,c,c,c)if not(bb(a)~='number')then return true else return false end end)y=493 else if y<528 then y=534 bi=math.abs else do bq=math.floor end y=583 end end else if y<449 then bk=select y=452 else bb=type y=471 end end end else if y<=172 then if y<=73 then if y>58 then y=93 bp=string.byte else y=73 z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=nil end else if y<=93 then y=130 bj=string.char else if y<165 then y=172 ce=string.sub else y=203 cj=string.gsub end end end else if y>=292 then if y>=326 then if y<359 then be=(getfenv or function()return _ENV end)y=367 else bg=setmetatable y=414 end else do bo=math.ldexp end y=326 end else if y<=203 then bs=string.rep y=243 else if y>245 then ba=table.insert y=292 else y=260 do cg=table.concat end end end end end end else if y>=1204 then if y<=1320 then if y>=1267 then if y>=1283 then if y>1287 then bt={}y=1369 else bn=function(...)do return{...},bk('#',...)end end y=1320 end else y=1283 bw=function(a,a,a,a)local a,c,i,l=69,64,60,24,22,68,18,64,59,77,94,53,23 while a~=39 do if c<=130 then if c<=64 then i,l=nil c=105 else if c>110 then c=164 i=bm:sub(br,(br+l-1))else l=bd()c=130 end end else if c>=198 then if c<211 then c=217 do return i;end else a=39;end else do br=(br+l);end c=198 end end end end end else if y<1229 then bu=function()local a,c a,c=bp(bm,br,(br+2))do br=(br+2);end do return((c*256)+a);end end y=1235 else bx=function()local a,c,i,l,o,p,r,u=63,71,11,48,97,73,20,83,39,24,84,92,85,57,19,37,10 while a~=35 do if c>=223 then if c>=306 then if c<=306 then if 0==p then do if 0~=r then p=1 do i=0 end else do return(u*0)end end end elseif f~=p then else if 0==r then do return(u*(0/0))end else return(u*(1/0))end end c=342 else if c>349 then a=35;else c=370 return(u*(2^(p-1023))*(r/ca+i))end end else if c>=264 then if c<282 then c=286 do r=(ck(0,o,20)*4294967296+l)end else i=1 c=306 end else c=264 p=ck(20,o,11)end end else if c>=129 then if c>=168 then if c<196 then do if((l==0 and o==0))then return 0 end end c=202 else do u=((-1)^ck(31,o,1))end c=223 end else o=bd()c=168 end else if c>80 then c=129 do l=bd()end else c=101 i,l,o,p,r,u=nil end end end end end y=1267 end end else if y>=1470 then if y>=1501 then if y>1508 then x=68;else y=1518 return bh(cl(be()),{},be())();end else y=1501 bh=function(a,c,f,i,i)local i,l,o,p,r p=a[94]i=a[177]o=bv r=a[39]do l=a[13]end return function(...)local a,o,u,v,x,ba,bb,be,bf bb=1 x=-j bf=-1 be={}o={...}do a=(bk('#',...)-1)end v={}do ba={}end for j=0,a do if(not(j<i))then do be[(j-i)]=o[(j+1)];end else ba[j]=o[(j+1)];end;end;u=(a-i+1)while true do local j,u,bf,bg,bi,bj,bk,bl,bo,bq bq=l[bb]bl=bq[138]bi=bq[8]u=bq[141]bf=bq[84]bg=bq[104]bk=bq[117]j=bq[46]bj=bq[146]bo=bq[16]if not(bl<44)then do if not(bl>65)then if not(bq[138]<55)then if not(bl>59)then do if not(bq[138]<57)then if not(bl>57)then local bi,bs,bu do bu=u end do bi=ba[(bu+2)]end bs=(ba[bu]+bi)ba[bu]=bs;if((bi>0))then do while((bs<=ba[bu+1]))do bb=bj;ba[bu+3]=bs;break end end elseif(not(bs<ba[bu+1]))then bb=bj;ba[(bu+3)]=bs;end else if(bl>58)then ba[bq[141]]=(0~=bq[146]);bb=(bb+1);else bv[u]()end end else if(bl<q)then bv[u]=bv[bf]else do do return ba[j][bk]end end end end end else if not(bl>62)then do if not(bl<61)then if(bl<62)then if u then bq[141]=false;bg=bj;bb=(bb-1);else bb=(bb+bq[146]+bg);end else ba[u]=ba[bj];end else ba[bo]=(function()ba[u]=bh(r[bf],nil,f);end)end end else do if not(bl<64)then if(bl>64)then local q do q=u end do return bz(ba,q,(q+bj))end;else do f[p[bj]]=ba[u];end end else local q,bi bi=u q=ba[bj]ba[(bi+1)]=q;ba[bi]=q[p[bg]];end end end end else do if not(bl<49)then if not(bl>51)then if not(bl>49)then local q,bi,bs,bu,by bs=u bi=bq[104]bu=(bs+2)do by={ba[bs](ba[bs+1],ba[bu])}end for ce=1,bi do ba[(bu+ce)]=by[ce]end q=ba[(bs+3)]do if q then ba[bu]=q else bb=bj;end;end else if(bl>50)then ba[bq[141]]=(not ba[bq[146]]);else local q q=ba[j][bk]do ba[j][bq[117]]=(q..ba[bg]);end end end else if not(bl>52)then if(not(ba[u]<ba[bg]))then bb=bj;end;else do if 53==bl then local j,q,bi,bs j=u do q,bi=bn(ba[j](bz(ba,(j+1),bj)))end x=(bi+j-1)do bs=0 end for bi=j,x do bs=(bs+1);ba[bi]=q[bs];end;else do ba[u]=(ba[bj]+p[bg]);end end end end end else do if not(bq[138]<46)then do if not(bl>46)then ba[u][ba[bq[146]]]=ba[bg];else do if(bl<48)then ba[u]=(ba[bj]/ba[bg]);else x=bq[u];end end end end else if not(bl~=44)then p=bv[bq[141]](p)else do do return ba[u]end end end end end end end end else if not(bl>76)then if not(bl<71)then if not(bl<74)then if not(bq[138]>74)then ba[bq[h]]=#ba[bj];else if 75==bq[138]then local h,j h=bq[141]j=bj for q=h,j do do ba[q]=be[(q-h)];end end;else ba[bq[141]]=ba[bj][p[bg]];end end else if not(bq[d]<72)then if 72==bl then if ba[u]then bb=bj;end;else ba[u]=ba[bj]end else for d=u,bq[146]do ba[d]=nil;end;end end else if not(bl>67)then if 66==bl then ba[bo]=(function()ba[u]=bh(r[bf],k,f);end)else if not ba[u]then bb=bj;end;end else if not(bl>68)then ba[u]=bv[bq[84]]else do if(bl<e)then ba[bq[u]]=ba else ba[u]=-ba[bj];end end end end end else do if not(bl<83)then if not(bl>85)then if not(bq[138]<84)then if not(bl~=84)then ba={};for d=0,a do do if(d<i)then ba[d]=o[(d+1)];else break end;end end;else ba[u]=(ba[bj]/p[bg]);end else do bb=((ba[u]<ba[bg])and bj or bb)end end else if not(bl>86)then do bb=((p[u]<ba[bg])and bj or bb)end else if(bl<88)then local a,d,e e=u a=ba[e]do d=ba[(e+2)]end if((d>0))then if((a>ba[e+1]))then do bb=bj;end else ba[(e+3)]=a;end elseif((a<ba[e+1]))then bb=bj;else ba[(e+3)]=a;end else if not ba[bg]then do ba[u]=ba[bq[104]];end do bb=bj;end end;end end end else if not(bl>79)then if not(bq[138]<78)then do if(bl>78)then local a,d d=u a={}for e=1,#v do local h h=v[e]do for e=0,#h do local i,j,k i=h[e]do j=i[1]end do k=i[2]end if(j==ba and k>=d)then a[k]=j[k];i[1]=a;end;end;end end;else ba[u]=(ba[bj]+ba[bg]);end end else ba[u]=(ba[bq[146]]%ba[bg]);end else if not(bl<81)then if(bq[138]>81)then ba[u][p[bj]]=p[bg];elseif((ba[bq[141]]<ba[bg]))then bb=bq[146];end else do bb=((ba[u]~=ba[bg])and bj or bb)end end end end end end end end else if not(bq[138]<22)then if not(bl>32)then if not(bl>26)then if not(bl<24)then if not(bl>24)then ba[bq[141]]=nil;else if(bl>25)then ba[u]=bv[bf]else local a,d a=u do d=ba[bq[146]]end ba[(a+1)]=d;ba[a]=d[ba[bg]];end end else do if(bl<23)then while(ba[u]>ba[bg])do bb=bq[146];break end else local a,d d,a=bn(...)for a=1,u do do ba[(a-1)]=d[a]end end end end end else if not(bl>29)then if not(bl<28)then if not(bl~=28)then do ba[u]=(ba[bq[146]]*p[bg]);end else do ba[u]=(ba[bj]^ba[bg]);end end else local a,d a=bj do d=ba[a]end for e=(a+1),bg do d=(d..ba[e]);end;ba[u]=d;end else if not(bl>30)then bb=bj;else if(bq[138]>31)then ba[u]=f[p[bj]];else do l[bb]=bt[bk];end bb=bj;end end end end else do if not(bl<38)then if not(bl<41)then if not(bl<42)then if(bl<43)then local a,d,e d=u a={ba[d](bz(ba,d+1,bj))}e=0 for h=d,bg do e=(e+1);do ba[h]=a[e];end end else end else ba[bq[141]]=bh(r[bj],nil,f);end else if not(bl>38)then ba[bo]();else if not(bl~=39)then bv[bq[141]]=ba[bf]else local a a=u do return ba[a](bz(ba,(a+1),bj))end;end end end else if not(bl<35)then if not(bq[138]<36)then if(bl>36)then ba[u]=f[p[bj]][p[bg]];else ba[u]();end else do l[bb]=bt[bk];end bb=bj;end else do if(bl<g)then local a a=u ba[a]=ba[a](bz(ba,a+1,x));else ba[u]=c[bj];end end end end end end else if not(bl>10)then do if not(bl<5)then if not(bl<8)then do if not(bl<9)then if not(bl~=9)then bv[u]={}else do if(not(ba[u]==p[bg]))then bb=bj;end;end end else do ba[u]=ba[bj][ba[bq[m]]];end end end else do if not(bl>5)then else if not(bq[138]~=6)then ba[bq[141]]={};else bb=((p[bq[141]]~=p[bg])and bj or bb)end end end end else if not(bl<2)then do if not(bl<3)then if(bl>3)then ba[bq[n]]=(ba[bj]*ba[bg]);else do bv=ba end end else c[bj]=ba[u];end end else do if(bl<1)then if((p[u]<ba[bq[104]]))then bb=bj;end;else l[bb]={[117]=0,[138]=bl- -31,[146]=4,[141]=7,[104]=0};bb=(bb-1);end end end end end else if not(bq[138]<16)then if not(bl>18)then do if not(bl>t)then local a do a={}end if(#v>w)then for c=1,#v do local d d=v[c]for c=0,#d do local e,g,h g=d[c]e=g[1]h=g[2]if(e==ba and h>=0)then a[h]=e[h]g[1]=a end end end end return ba[(u+2)];else if not(bl~=17)then ba[u]=(ba[bj]-ba[bg]);else f=ba[bq[u]]end end end else if not(bl<20)then if(bl<21)then ba[u]=(ba[bj]%p[bg]);else ba[u]=p[bj]end else local a a=u ba[a]=ba[a](ba[a+1]);end end else if not(bq[138]>12)then if(bl>11)then if(ba[bq[104]]~=ba[bq[141]])then do bb=bj;end end;else end else if not(bq[138]<14)then if(bl>14)then local a,c c=u a={}if(#v>0)then for d=1,#v do local e e=v[d]for d=0,#e do local f,g,h g=e[d]f=g[1]h=g[2]if(f==ba and h>=0)then a[h]=f[h]do g[1]=a end end end end end return bz(ba,c,x);else local a,c,d,e do a=bq[141]end c=((bg-1)*50)d=ba[a]e=bj for f=1,e do d[(c+f)]=ba[(a+f)]end;end else local a a=u ba[a]=ba[a](bz(ba,a+1,bj));end end end end end end do bb=(bb+1);end end;end;end end else if y<=1369 then cl=function(a,c)local c,d,e,f,g,h,i,j=71,59,69,25,81,81,89,15,94,25,95,78,82,11,15,93,28,88,49,27,97,65,20,76,80 while c~=37 do if d<=237 then if d>=145 then if d>=200 then if d<234 then d=237 i=bd()else g={}d=254 end else if d<158 then d=164 f=bd()else for c=(#bt+1),(#bt+f)do local k,l,m,n,o=74,54,16,29,87,78,87,87,54,56,69,80,39,11,85,54,28,45,94,34,59,89 while k~=52 do if l<=303 then if l<=166 then if l>=128 then if l>132 then do n=bd()end l=183 else o[8]=cc();l=166 end else if l<87 then l=96 m,n,o=nil else l=128 o={}end end else if l<=221 then if l<216 then m=bd()l=221 else l=263 o[117]=cc();end else if l>265 then o[138]=ch(m,1,11);l=343 else do o[131]=ch(n,1,2);end l=303 end end end else if l<=426 then if l<=365 then if l>345 then o[84]=ch(n,12,20);l=381 else l=365 o[141]=ch(n,3,11);end else if l<419 then l=426 do o[104]=ch(n,21,29);end else l=451 o[146]=ch(m,12,33);end end else if l>=520 then if l>522 then k=52;else l=545 bt[c]=o;end else if l>456 then l=520 o[16]=-o[104]else l=489 o[46]=-o[141]end end end end end end d=200 end end else if d>=103 then if d>107 then d=145 e={}else d=130 j={}end else if d<73 then e,f,g,h,i,j=nil d=82 else h={}d=103 end end end else if d<=353 then if d<=291 then if d<286 then d=291 do for c=1,i do local f,i,k,l=73,61,89,81,54,60,92,74,64,41,86,83,55,27 while f~=29 do if i>=167 then if i>=194 then if i>203 then break else i=243 do g[c]=k;end end else i=194 if(not(l~=3))then k=(not(cc()==0));elseif(0==l)then k=bx();elseif(not(l~=4))then k=bw();elseif(1==l)then k=a[bw()];end;end else if i>=103 then if i>112 then k=nil i=167 else i=124 do l=cc()end end else i=103 k,l=nil end end end end end else e[94]=g d=313 end else if d>321 then do e[39]=j;end d=386 else d=353 for a=1,bd()do j[a-1]=cl();end end end else if d>=464 then if d<=464 then e[177]=cc();d=502 else if d>509 then break else d=517 do return e;end end end else if d>393 then d=464 e[13]=h;else for a=1,bd()do local c,e,f,g,i,j=67,77,76,49,16,14,29,92,70,31,54,35,61,49,93,67,94,12,13,63,85,37,53,28 while c~=39 do if e>=393 then if e<=478 then if e>=442 then if e<472 then e=478 j[146]=ch(g,12,33);else j[104]=ch(i,21,29);e=518 end else if e>396 then e=442 j[141]=ch(i,3,11);else e=417 j[138]=ch(g,1,11);end end else if e<=555 then if e>522 then e=575 j[46]=-j[141]else j[117]=ch(i,12,20);e=555 end else if e>=623 then if e>626 then break else e=668 do h[a]=j;end end else e=623 j[16]=-j[104]end end end else if e>=245 then if e<=290 then if e>252 then i=bd()e=330 else e=290 if not(cc()~=1)then do for a=1,cc()do j[122][a]={cc()==0,bd()}end end end end else if e>=349 then if e<370 then e=372 f=ch(i,1,2)else j[131]=f e=393 end else e=349 g=bd()end end else if e>=169 then if e>173 then j[122]={};e=245 else e=215 j[8]=cc();end else if e>82 then e=169 j={{},nil,nil}else e=123 f,g,i,j=nil end end end end end end d=435 end end end end end end y=1386 else if y>1394 then y=1470 cf={}else bv={}y=1435 end end end end else if y<=984 then if y>=902 then if y>=935 then if y<978 then do z=2 end y=984 else do for a=1,31 do bc[a]=z z=(z*2)end end y=1024 end else do bc={[0]=1}end y=935 end else if y>817 then ca=(2^52)y=902 else y=861 ci=''end end else if y<=1079 then if y<=1024 then ck=function(a,c,d,e,e)local e,f,g=60,63,46,54,49,35,32,15,68,30,53,38,89 while e~=39 do if f>=160 then if f<=160 then f=203 g=(g-g%1)else if f>208 then e=39;else f=234 do return g end end end else if f>=95 then if f>101 then g=((c/bc[a])%bc[d])f=160 else g=nil f=116 end else f=95 g=nil end end end end y=1060 else if y<1073 then y=1079 cd=(bit_lib and bit_lib.bxor or function(a,c)a=a%(2^32)c=c%(2^32)local d,e=0,1 while a>0 and c>0 do local f,g=a%16,c%16 d=d+cb[f+1][g+1]*e a=(a-f)/16 c=(c-g)/16 e=e*16 end d=d+a*e+c*e return d end)else y=1102 ch=function(a,c,d,e)local e e=((a/2^(c-b))%2^((d-1)-(c-1)+1))return(e-e%1);end end end else if y>=1123 then if y<1153 then do bd=function()local a,b,c,d d,a,b,c=bp(bm,br,(br+s))br=(br+4);do return((c*16777216)+(b*65536)+(a*256)+d);end end end y=1155 else y=1204 cc=function()local a a=bp(bm,br,br)do br=(br+1);end return a;end end else y=1123 br=1 end end end end end end end)(0,1,14,138,70,2047,34,141,5,1,nil,10,104,141,7,0,56,6,3,16,1,0,0)
