--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)local z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=108,77,79,20,10,27,92,56,13,40,28,36,86,64,88,53,66,29,42,33,80,90,65,96,42,75,71,60,82,98,98,28,11,96,63,54,92,87,49,48,68,68,56,38,67,94,92,50,29,45,37 while z~=68 do if ba>=807 then if ba<=1143 then if ba>=1009 then if ba<=1066 then if ba<=1009 then ba=1050 bh=function(co,cp,cq,cr,cr,cr)local cr,cs,ct=76,49,88,23,68,37,71,83,92,82,55,74,81 while cr~=42 do if cs<=143 then if cs<=49 then ct=nil cs=96 else if cs>98 then cs=179 do ct=((cp/ce[co])%ce[cq])end else ct=nil cs=143 end end else if cs>=219 then if cs<233 then cs=240 return ct else cr=42;end else cs=219 ct=(ct-ct%1)end end end end else if ba<1058 then ba=1066 bk=(bit_lib and bit_lib.bxor or function(co,cp)co=co%(2^32)cp=cp%(2^32)local cq,cr=0,1 while co>0 and cp>0 do local cs,ct=co%16,cp%16 cq=cq+bb[cs+1][ct+1]*cr co=(co-cs)/16 cp=(cp-ct)/16 cr=cr*16 end cq=cq+co*cr+cp*cr return cq end)else cj=function(co,cp,cq,cr,cr)local cr do cr=((co/2^(cp-1))%2^((cq-1)-(cp-1)+1))end return(cr-cr%1);end ba=1087 end end else if ba>=1123 then if ba>1130 then ba=1164 do bc=function()local co co=bw(cg,bo,bo)bo=(bo+1);do return co;end end end else ba=1143 do cl=function()local co,cp,cq,cr co,cq,cr,cp=bw(cg,bo,(bo+3))do bo=(bo+4);end return((cp*16777216)+(cr*65536)+(cq*256)+co);end end end else bo=1 ba=1123 end end else if ba<=833 then if ba>814 then ba=872 do bf=(2^x)end else by=''ba=833 end else if ba>=920 then if ba>926 then do for x=1,v do ce[x]=bl bl=(bl*2)end end ba=1009 else bl=2 ba=966 end else ba=920 ce={[0]=1}end end end else if ba>=1287 then if ba<=1372 then if ba<=1287 then br=function(v,x,x,x,x)local x,co,cp,cq,cr,cs,ct,cu=78,38,77,37,25,41,46,75,92,83,13,12,79,69,78,17,22,63,34,34,47,96,62,68,77 while x~=42 do if co>=369 then if co>=449 then if co>=491 then if co>=511 then if co>513 then break else co=545 return cu;end else cu[192]=cs;co=511 end else if co<469 then co=475 do cu[175]=bc();end else co=491 for x=1,cl()do do cs[x-1]=br();end end end end else if co>=414 then if co>418 then co=449 cu[83]=cq else co=430 do for x=1,ct do local cv,cw,cx,cy=68,41,54,21,60,74,37,79,30,63,80,76,82 while cv~=37 do if cw>=124 then if cw>=150 then if cw>152 then cv=37;else cw=177 do cq[x]=cy;end end else cw=150 if(not(cx~=4))then do cy=(not(bc()==0));end elseif(not(cx~=3))then cy=bx();elseif(not(cx~=0))then cy=bv();elseif(1==cx)then do cy=v[bv()];end end;end else if cw<=41 then cw=68 cx,cy=nil else if cw>76 then cy=nil cw=124 else cx=bc()cw=86 end end end end end end end else if co>372 then co=414 cq={}else ct=cl()co=399 end end end else if co>=184 then if co>=277 then if co<315 then co=324 do for v=1,cl()do local x,cv,cw,cx,cy,cz=73,57,72,25,69,47,47,67,66,68,80,16,73,99,71,95,13,79,64,70,52,17,87,22 while x~=37 do if cv<=323 then if cv>=183 then if cv>=255 then if cv<=255 then cv=290 do cy=cl()end else if cv<315 then cz=cj(cx,1,2)cv=323 else cv=356 cw[b]=cz end end else if cv<216 then cv=225 do if 1==bc()then for b=1,bc()do cw[76][b]={bc()==0,cl()}end end end else do cx=cl()end cv=255 end end else if cv>=120 then if cv>125 then cv=183 do cw[76]={};end else do cw[158]=bc();end cv=145 end else if cv>61 then cv=120 cw={{},nil,nil}else cv=94 cw,cx,cy,cz=nil end end end else if cv>=483 then if cv<=514 then if cv>485 then cw[i]=-cw[90]cv=557 else cw[183]=cj(cx,12,s);cv=514 end else if cv>=582 then if cv<593 then cv=599 cp[v]=cw;else x=37;end else cw[66]=-cw[58]cv=582 end end else if cv<=389 then if cv>359 then cw[90]=cj(cx,3,11);cv=427 else cv=389 cw[121]=cj(cy,1,11);end else if cv>429 then cv=483 cw[58]=cj(cx,21,29);else cv=468 do cw[c]=cj(cy,12,33);end end end end end end end end else cu[187]=cp;co=369 end else if co>190 then for b=(#bz+1),(#bz+cr)do local c,i,s,v,x=60,40,91,92,79,85,41,62,96,74,40,21,96,12,12,81,88,89,29,63,53,45 while c~=46 do if i<=291 then if i>=198 then if i>=250 then if i>259 then do x[121]=cj(v,1,11);end i=334 else x[12]=cj(s,1,2);i=291 end else if i<224 then v=cl()i=230 else i=250 x[183]=bc();end end else if i>=113 then if i<143 then do x[158]=bc();end i=150 else i=198 s=cl()end else if i<86 then i=88 s,v,x=nil else i=113 x={}end end end else if i>=437 then if i<=452 then if i>446 then i=475 do x[f]=-x[58]end else i=452 x[113]=-x[90]end else if i<510 then i=512 bz[b]=x;else c=46;end end else if i>=389 then if i<416 then i=420 do x[58]=cj(s,21,29);end else x[164]=cj(v,12,33);i=437 end else if i>339 then x[162]=cj(s,12,20);i=389 else i=357 x[90]=cj(s,3,11);end end end end end end co=277 else co=230 cr=cl()end end else if co<=79 then if co<77 then cp,cq,cr,cs,ct,cu=nil co=79 else cp={}co=125 end else if co>131 then co=184 cu={}else co=166 do cs={}end end end end end end end ba=1330 else if ba>1333 then ba=1398 ci={}else ba=1372 do cd={}end end end else if ba<=1398 then bd=function(b,c,f,i,i,i)local i,s,v,x,co s=b[192]x=b[187]v=b[83]i=b[175]co=cd return function(...)local b,co,cp,cq,cr,cs,ct,cu,cv do cs=1 end ct=-1 do b=-1 end cq={}cr={...}cu=(cf('#',...)-1)co={}cp={}for b=0,cu do if(not(b<i))then cq[(b-i)]=cr[(b+1)];else cp[b]=cr[(b+1)];end;end;cv=(cu-i+1)do while true do local b,cv,cw,cx,cy,cz,da,db,dc,dd db=x[cs]cw=db[121]cz=db[158]do da=db[90]end cv=db[162]dc=db[58]cx=db[183]do dd=db[113]end cy=db[164]b=db[66]if not(cw>44)then if not(cw<22)then if not(cw>32)then if not(cw>26)then if not(db[121]>23)then if(cw<23)then local cz,de,df de=da df={cp[de](bq(cp,de+1,cy))}cz=0 for dg=de,dc do cz=(cz+1);cp[dg]=df[cz];end else local cz,de,df de=db[90]df=cp[de]cz=cp[(de+2)]if((cz>0))then if((df>cp[de+1]))then cs=cy;else cp[(de+3)]=df;end elseif((df<cp[de+1]))then cs=cy;else cp[(de+3)]=df;end end else if not(cw<25)then do if(db[121]>25)then local cz,de de=da cz=cp[cy]cp[(de+1)]=cz;cp[de]=cz[cp[db[58]]];elseif not cp[da]then cs=cy;end end else cp[da]=cp[cy][cp[db[58]]];end end else if not(cw>29)then do if not(cw<28)then if not(cw~=28)then else cp={};do for cz=0,cu do do if(cz<i)then do cp[cz]=cr[(cz+1)];end else break end;end end;end end else cp[da]=c[cy];end end else if not(db[121]>30)then else if(cw<32)then if(not(cp[da]<cp[dc]))then do cs=cy;end end;else do cd[db[90]]=cd[cv]end end end end end else do if not(cw>38)then if not(cw>35)then if not(cw<34)then if(cw>34)then cp[da]=(cp[cy]-cp[dc]);else local i do i={}end while#co>0 do for cr=1,#co do local cr=co[cr]for cu=0,#cr do local cr=cr[cu]local cu=cr[1]local cz=cr[2]if cu==cp and cz>=0 then i[cz]=cu[cz]cr[1]=i end end end break end return 1;end else for i=da,cy do do cp[i]=nil;end end;end else if not(db[121]>36)then if not cp[dc]then do cp[da]=cp[dc];end cs=db[164];end;else do if(cw>37)then if((cp[da]>cp[dc]))then cs=cy;end;else cd[da]={}end end end end else if not(cw<42)then do if not(cw>42)then do do return cp[da]end end else if(cw<44)then cp[da]=(cp[cy]/cp[dc]);else if da then da=false;dc=cy;do cs=(cs-1);end else cs=(cs+cy+dc);end end end end else if not(db[121]<40)then do if 40==cw then cp[da]=(cp[cy]*v[dc]);else cd=cp end end else v=cd[da](v)end end end end end else if not(cw>10)then do if not(db[121]<5)then do if not(cw<8)then if not(cw<9)then do if 9==cw then cp[da]=cp[cy]else local i i=da cp[i]=cp[i](bq(cp,i+1,ct));end end else local i,cr,cu,cz cr=db[90]cu=((dc-1)*50)i=cp[cr]cz=cy for de=1,cz do do i[(cu+de)]=cp[(cr+de)]end end;end else do if not(cw<6)then if(cw>6)then cp[b]=(function()do cp[da]=bd(s[cv],h,f);end end)else x[cs]={[90]=14,[164]=17,[183]=0,[121]=cw- -43,[58]=89};cs=(cs-e);end else c[db[164]]=cp[da];end end end end else if not(db[121]>1)then if 0==cw then f=cp[db[da]]else ct=db[da];end else if not(cw<3)then if 3==cw then do cp[b]=(function()cp[db[90]]=bd(s[cv],n,f);end)end else cs=((cp[da]<cp[dc])and cy or cs)end else if(not(cp[da]==cp[dc]))then do cs=db[164];end end;end end end end else do if not(cw>15)then if not(db[121]<13)then if not(cw>13)then do cp[da]=cd[cv]end else if 14==cw then do cp[da]=cd[cv]end else x[cs]={[183]=0,[121]=db[121]- -49,[164]=2,[58]=1,[90]=0};cs=(cs-1);end end else if(cw<12)then do cp[db[p]]=(cp[cy]+cp[db[58]]);end else cp[da]={};end end else do if not(cw>18)then do if not(cw<17)then if 17==cw then x[cs]=bz[cx];do cs=cy;end else do x[cs]=bz[cx];end cs=db[164];end else local b do b=da end do cp[b]=cp[b](bq(cp,b+1,db[164]));end end end else if not(cw<20)then if(cw>20)then do cp[da]=f[v[cy]][v[db[58]]];end else do cp[da]=-cp[db[164]];end end elseif((v[da]<cp[dc]))then do cs=cy;end end end end end end end end else if not(cw>66)then if not(cw>55)then do if not(cw>49)then if not(cw<47)then if not(cw>47)then cp[db[da]]=cp else if 48==cw then cp[da]=(not cp[cy]);else cp[db[90]]=v[cy]end end else if(cw>45)then cs=((v[db[90]]<cp[dc])and cy or cs)else cp[da]=f[v[cy]];end end else if not(cw>52)then do if not(cw<51)then do if(db[121]>51)then local b,c,e,h,i do h=da end c=dc e=(h+2)i={cp[h](cp[h+1],cp[e])}for n=1,c do do cp[(e+n)]=i[n]end end b=cp[(h+3)]if b then do cp[e]=b end else cs=cy;end;else cp[da]=(cp[db[164]]/v[dc]);end end else do cp[da]=(cp[cy]+v[dc]);end end end else if not(cw>53)then local b b=da cp[b]=cp[b](cp[b+1]);else if(cw<55)then cp[da]=#cp[cy];else cd[db[90]]()end end end end end else if not(cw>60)then do if not(cw>57)then if(cw<57)then cp[da]=(cp[cy]%cp[db[58]]);else cd[da]=cp[cv]end else if not(cw<59)then if 59==cw then do do return cp[da]();end end;else cp[da][v[db[164]]]=v[dc];end else do f[v[cy]]=cp[db[90]];end end end end else if not(cw>63)then if not(cw>61)then local b b=da do return cp[b](bq(cp,(b+1),cy))end;else if(cw>62)then cp[da]=(0~=cy);cs=(cs+1);else do do return cp[dd][cx]end end end end else if not(cw>t)then cp[da][cp[cy]]=cp[dc];else if(cw<66)then else cp[da]=nil;end end end end end else if not(cw>77)then do if not(cw<72)then do if not(cw<75)then if not(cw>y)then cp[da]=(cp[cy]*cp[db[58]]);else if not(cw~=76)then cp[db[66]]();else local b,c do b=db[90]end c={}for e=1,#co do local h h=co[e]for e=0,#h do local i,n,p p=h[e]n=p[1]i=p[2]if(n==cp and i>=b)then c[i]=n[i];p[1]=c;end;end;end;end end else do if not(cw<73)then do if(db[121]<74)then local b,c c=da b=cp[cy]cp[(c+1)]=b;do cp[c]=b[v[dc]];end else local b do b=db[90]end do return bq(cp,b,(b+cy))end;end end else cs=cy;end end end end else if not(cw<69)then if not(db[121]<70)then if(cw<71)then local b b=cp[dd][cx]cp[dd][cx]=(b..cp[dc]);else if cp[da]then do cs=cy;end end;end else local b,c b=da c=cy for e=b,c do cp[e]=cq[(e-b)];end;end else if(cw>o)then local b,c b=cy do c=cp[b]end do for e=(b+1),dc do c=(c..cp[e]);end;end cp[da]=c;else cp[da]=(cp[db[164]]%v[dc]);end end end end else if not(cw>83)then if not(cw<81)then if not(cw<82)then if(cw<83)then local b,c do b=da end c={}if(#co>0)then for e=1,#co do local h h=co[e]for e=0,#h do local i,n,o do n=h[e]end i=n[1]o=n[2]while i==cp and o>=0 do c[o]=i[o]n[1]=c break end end end end return bq(cp,b,ct);else local b,c,e do b=da end c=cp[(b+2)]e=(cp[b]+c)do cp[b]=e;end if((c>0))then do if(not(e>cp[b+1]))then cs=cy;cp[(b+3)]=e;end end elseif(not(e<cp[b+1]))then cs=cy;cp[(b+3)]=e;end end else local b,c b,c=ch(...)do for c=1,da do cp[(c-1)]=b[c]end end end else if not(cw>78)then do cp[da]=cp[cy];end else if(db[121]>79)then cs=((cp[da]~=cp[dc])and cy or cs)else if(not(cp[da]==v[dc]))then do cs=cy;end end;end end end else do if not(db[121]>86)then if not(cw>84)then cp[db[90]]=(cp[cy]^cp[dc]);else do if not(cw~=85)then if((cp[da]<cp[dc]))then cs=cy;end;else cp[da]=bd(s[db[164]],nil,f);end end end else if not(cw<88)then if not(cw~=88)then do cp[da]();end else cp[da]=cp[cy][v[dc]];end else local b,c,e,f b=da f,e=ch(cp[b](bq(cp,(b+1),cy)))ct=(e+b-1)c=0 do for e=b,ct do c=(c+1);do cp[e]=f[c];end end;end end end end end end end end cs=(cs+1);end;end end;end ba=1416 else if ba<1438 then ba=1444 return bd(br(bj()),{},bj())();else z=68;end end end else if ba<=1187 then if ba<1182 then cn=function()local b,c b,c=bw(cg,bo,(bo+2))bo=(bo+a);return((c*256)+b);end ba=1187 else bx=function()local a,b,c,e,f,h,i,n=90,47,65,97,77,76,11,97,82,64,72,48,91,71,45,63,23,89 while a~=41 do if b<=204 then if b>=140 then if b>=156 then if b>158 then b=239 c=((-1)^bh(31,n,l))else b=204 if((i==0 and n==0))then return 0 end end else b=156 n=cl()end else if b>51 then do i=cl()end b=140 else c,e,f,h,i,n=nil b=91 end end else if b>=346 then if b<=346 then if not(f~=0)then if not(h==0)then do f=1 end e=m else return(c*0)end elseif not(f==2047)then else do if 0==h then do return(c*(0/0))end else return(c*(1/0))end end end b=369 else if b>374 then a=41;else b=416 return(c*(2^(f-1023))*(h/bf+e))end end else if b>=288 then if b<313 then do h=(bh(0,n,20)*4294967296+i)end b=322 else b=346 e=1 end else do f=bh(k,n,11)end b=288 end end end end end ba=1225 end else if ba<=1225 then bv=function(a,a)local a,b,c,e=43,31,95,48,43,61,61,70,99,17,81,41,56 while a~=33 do if b<=95 then if b>=79 then if b>84 then e=cg:sub(bo,(bo+c-1))b=143 else b=95 c=cl()end else c,e=nil b=79 end else if b<=143 then bo=(bo+c);b=183 else if b<202 then b=208 return e;else a=33;end end end end end ba=1240 else if ba<1258 then ba=1265 ch=function(...)return{...},cf('#',...)end else do bz={}end ba=1287 end end end end end else if ba<=413 then if ba<=211 then if ba<=113 then if ba>84 then ba=133 bw=string.byte else ba=113 bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=nil end else if ba>=172 then if ba<202 then bu=string.sub ba=211 else cm=string.gsub ba=249 end else do bg=string.char end ba=172 end end else if ba<=329 then if ba<=249 then ba=286 do cb=string.rep end else if ba<320 then ba=329 ck=table.concat else do bs=table.insert end ba=375 end end else if ba>=391 then if ba<411 then bj=(getfenv or function()return _ENV end)ba=413 else ca=setmetatable ba=460 end else ba=391 cc=math.ldexp end end end else if ba>=584 then if ba<=670 then if ba<=584 then ba=629 bq=(unpack or table.unpack)else if ba>634 then ba=705 bn={}else ba=670 do bi=tonumber end end end else if ba<=705 then do for a=0,255 do bn[a]=bg(a);end end ba=752 else if ba>754 then ba=807 bb={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{q,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,j,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,w,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{u,6,5,4,3,2,1,0,15,14,13,12,11,10,d,8,},{8,9,g,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,r,2,1,0,},nil,nil}else do cg=cmfunction(a,b,b)return bn[bi(a,16)]end)end ba=786 end end end else if ba>=511 then if ba>=527 then if ba<550 then bm=math.abs ba=555 else do bp=math.floor end ba=584 end else ba=527 bt=(function(a,b,b)if'number'==be(a)then return true else return false end end)end else if ba<482 then cf=select ba=488 else do be=type end ba=511 end end end end end end end)(2,12,164,9,1,66,10,nil,113,6,20,1,0,nil,67,90,1,3,20,64,7,31,10,52,75)
